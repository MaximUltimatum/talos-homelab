apiVersion: apps/v1
kind: Deployment
metadata:
  name: gathio-deployment
  labels:
    app: gathio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gathio
  template:
    metadata:
      name: gathio-template
      labels:
        app: gathio
    spec:
      volumes:
        - name: gathio-storage
          persistentVolumeClaim:
            claimName: gathio-pvc
        - name: gathio-db-storage
          persistentVolumeClaim:
            claimName: gathio-db-pvc
        - name: config-volume
          configMap:
            name: gathio-config
        - name: rendered-config
          emptyDir: {}
      initContainers:
        - name: render-config
          image: alpine:3.20
          env:
            - name: SMTP_HOST
              valueFrom:
                secretKeyRef:
                  name: smtp-secrets
                  key: smtp-host
            - name: SMTP_USER
              valueFrom:
                secretKeyRef:
                  name: smtp-secrets
                  key: smtp-username
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: smtp-secrets
                  key: smtp-password
          volumeMounts:
            - name: gathio-config
              mountPath: /in
              readOnly: true
            - name: rendered-config
              mountPath: /work
          command:
            - sh
            - -ceu
            - |
              cp /in/config.toml /work/config.toml
              # Helper to escape sed replacements safely (slashes & ampersands)
              esc() { printf '%s' "$1" | sed -e 's/[\/&]/\\&/g'; }
              # Replace tokens in the TOML with env vars
              [ -n "${SMTP_HOST:-}" ] && sed -i "s/SMTP_HOST/$(esc "$SMTP_HOST")/g" /work/config.toml
              [ -n "${SMTP_USER:-}" ] && sed -i "s/SMTP_USER/$(esc "$SMTP_USER")/g" /work/config.toml
              [ -n "${SMTP_PASSWORD:-}" ] && sed -i "s/SMTP_PASSWORD/$(esc "$SMTP_PASSWORD")/g" /work/config.toml

      containers:
        - name: gathio-container
          image: ghcr.io/lowercasename/gathio:1.6.0 # {"$imagepolicy": "flux-system:gathio"}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 443
          volumeMounts:
            - name: rendered-config
              mountPath: /app/config/config.toml
              subPath: config.toml
            - name: gathio-storage
              mountPath: /app/static
              subPath: static
            - name: gathio-storage
              mountPath: /app/public/events
              subPath: images
        - name: gathio-db
          image: mongo:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: gathio-db-storage
              mountPath: /data/db
