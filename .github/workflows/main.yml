name: Create PR for Flux Updates

on:
  push:
    branches:
      - 'flux-renovate'

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create unique branch and PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get the current commit hash from flux-renovate
          FLUX_COMMIT=$(git rev-parse HEAD)
          
          # Generate a unique branch name using timestamp and short commit hash
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          SHORT_COMMIT=$(echo $FLUX_COMMIT | cut -c1-7)
          NEW_BRANCH="flux-update-${TIMESTAMP}-${SHORT_COMMIT}"
          
          echo "Creating branch: $NEW_BRANCH"
          echo "From commit: $FLUX_COMMIT"
          
          # Checkout master and update to latest
          git checkout master
          git pull origin master
          
          # Create new branch from updated master
          git checkout -b "$NEW_BRANCH"
          
          # Try to cherry-pick, handle conflicts if they occur
          if ! git cherry-pick "$FLUX_COMMIT"; then
            echo "Merge conflict detected. Attempting automatic resolution..."
            
            # Check if this is a simple version update conflict
            CONFLICTED_FILES=$(git diff --name-only --diff-filter=U)
            echo "Conflicted files: $CONFLICTED_FILES"
            
            # For each conflicted file, try to resolve automatically
            for file in $CONFLICTED_FILES; do
              echo "Attempting to resolve conflict in: $file"
              
              # Check if it's a version conflict (common with Flux updates)
              if grep -q "<<<<<<< HEAD" "$file"; then
                # Take the incoming version (from flux-renovate)
                # This assumes Flux updates are always newer versions
                git checkout --theirs "$file"
                git add "$file"
                echo "Resolved conflict in $file by taking incoming changes"
              fi
            done
            
            # Check if all conflicts are resolved
            if git diff --cached --quiet && git diff --quiet; then
              echo "No staged changes after conflict resolution. Skipping this update."
              git cherry-pick --abort
              exit 0
            fi
            
            # Continue cherry-pick if conflicts were resolved
            if ! git cherry-pick --continue; then
              echo "Could not automatically resolve conflicts. Manual intervention required."
              echo "Conflicted files:"
              git status --porcelain | grep "^UU\|^AA\|^DD"
              
              # Create an issue for manual review instead
              gh issue create \
                --title "ðŸš¨ Manual Flux Update Required - Merge Conflicts" \
                --body "Automated Flux update failed due to merge conflicts that require manual resolution.
              
              **Commit:** $FLUX_COMMIT
              **Conflicted Files:**
              \`\`\`
              $CONFLICTED_FILES
              \`\`\`
              
              Please manually merge the changes from the flux-renovate branch." \
                --label "flux-update,merge-conflict"
              
              exit 1
            fi
          fi
          
          # Push the new branch
          git push origin "$NEW_BRANCH"
          
          # Get commit message for PR title and body
          COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")
          COMMIT_BODY=$(git log -1 --pretty=format:"%b")
          
          # Check if PR already exists for similar changes
          EXISTING_PR=$(gh pr list --base master --state open --search "Flux Image Update" --json number --jq '.[0].number // empty')
          
          if [ -n "$EXISTING_PR" ]; then
            echo "Existing Flux PR found (#$EXISTING_PR). Closing old PR and creating new one."
            gh pr close "$EXISTING_PR" --comment "Closing in favor of newer update: #$NEW_BRANCH"
          fi
          
          # Create the PR using GitHub CLI
          gh pr create \
            --title "ðŸ¤– Flux Image Update: $COMMIT_MESSAGE" \
            --body "Automated image updates by Flux.

          **Commit Details:**
          - Branch: $NEW_BRANCH  
          - Commit: $SHORT_COMMIT
          - Original commit from flux-renovate: $FLUX_COMMIT
          
          **Changes:**
          $COMMIT_BODY
          
          Please review the changes and merge if appropriate." \
            --base master \
            --head "$NEW_BRANCH"